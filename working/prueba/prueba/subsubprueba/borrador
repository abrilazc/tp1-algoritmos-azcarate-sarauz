    /*
cater_t *estructura_letra(char dato){
	
	size_t cantidad=sizeof(caracteres)/sizeof(caracteres[0]);
    for(size_t i=0;i<cantidad;i++){
        if(caracteres[i].letra == dato){
        	cater_t *caracter = caracteres[i];
            return caracter;
        }
    }
    return NULL;
}

void dibujar_letra(SDL_Renderer *renderer,char caracter, float posicion[2], color_t color){
    cater_t *literal=estructura_letra(caracter);
	size_t cant_punt=literal->longitud;
    const float matriz[cant_punt][2];
	
	for(size_t i=0;i<cant_punt-1;i++){
		matriz[i][0]=literal->puntos[0];
		matriz[i][1]=literal->puntos[1];
	}
	uint8_t r,g,b;
   	color_a_rgb(color,&r,&g,&b);
	float escala=1;
	
    SDL_SetRenderDrawColor(renderer, r, g, b, 0x00);   
    for(size_t j=0;j<cant_punt-1;j++){
        SDL_RenderDrawLine(
            renderer,   
            (matriz[j][0]*escala+posicion[0]),
            -(matriz[j][1]*escala+posicion[1]) + VENTANA_ALTO,
            (matriz[j+1][0]*escala+posicion[0]) ,
            -(matriz[j+1][1]*escala+posicion[1]) + VENTANA_ALTO
            );
    }
}
void palabra_a_polilinea(SDL_Renderer *renderer,char *palabra, float posicion[2], color_t color){
	char *letra;
	float espacio[]={6,0};
	while((letra=fgetc(palabra))!='\0'){
		polilinea=letra_a_polilinea(letra);
		dibujar_letra(renderer, letra,posicion+espacio,escala,color);
	}
}

void numero_a_polilinea(int numero,SDL_Renderer *renderer, float posicion[2], color_t color){
	char palabra[10];
	SDL_itoa(numero,palabra,10);//pasa el numero a palabra
	palabra_a_polilinea(renderer,palabra,posicion,color);
}
*/